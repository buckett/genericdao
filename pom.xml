<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>generic-dao</name>
	<groupId>org.sakaiproject.genericdao</groupId>
	<artifactId>generic-dao</artifactId>
	<version>0.12.1-SNAPSHOT</version>
	<properties>
		<hibernate.version>5.4.24.Final</hibernate.version>
		<spring.version>5.3.27</spring.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<packaging>jar</packaging>
	<organization>
		<name>CARET, University of Cambridge</name>
		<url>http://www.caret.cam.ac.uk/</url>
	</organization>
	<inceptionYear>2006</inceptionYear>
	<url>http://confluence.sakaiproject.org/confluence/x/zX8</url>
	<description> Generic Dao is a Java package which allows a developer to skip writing
        DAOs for their persistence objects when they are using Spring and/or Hibernate.
        The package was originally created by Aaron Zeckoski for the Evaluation System
        project but was repackaged to make it distributable by request. It is used in the
        RSF framework (http://www2.caret.cam.ac.uk/rsfwiki/). Note about the BeanUtils
        provided dependency: BeanUtils is not required if you are not using it in your
        project. Note about the Hibernate provided dependency: Hibernate is not required
        if you are not using it in your project. </description>
	<licenses>
		<license>
			<name>Apache License 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>For opensource use</comments>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>aaronz@vt.edu</id>
			<name>Aaron Zeckoski</name>
			<email>aaron@caret.cam.ac.uk</email>
			<url> http://confluence.sakaiproject.org/confluence/display/~aaronz </url>
			<organization>CARET</organization>
			<organizationUrl> http://www.caret.cam.ac.uk/ </organizationUrl>
			<roles>
				<role>Project Manager</role>
				<role>Architect</role>
				<role>Developer</role>
			</roles>
			<timezone>0</timezone>
		</developer>
	</developers>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	<!-- define source code repository location -->
	<scm>
		<connection>scm:git:git://github.com/sakaiproject/genericdao.git</connection>
		<developerConnection>scm:git:git@github.com:sakaiproject/genericdao.git</developerConnection>
		<url>scm:git:https://github.com/sakaiproject/genericdao</url>
	</scm>
	<dependencies>
		<!-- Spring dependency, you must have the spring jars on your classpath, 
			Spring version 1.2.8 or higher is required to run this -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- optional Hibernate dependency, you will need to put this jars into 
			your classpath depending on whether you are using hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.27.0-GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.azeckoski</groupId>
			<artifactId>reflectutils</artifactId>
			<version>0.9.20</version>
		</dependency>

		<!-- testing dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.7.1</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.28</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.15.2.0</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<!-- include the readme.txt file and the java source files -->
			<resource>
				<directory>${basedir}</directory>
				<includes>
					<include>README</include>
					<include>LICENSE</include>
					<include>src/main/**/*.java</include>
					<include>src/main/**/*.html</include>
					<include>src/main/**/*.xml</include>
					<include>src/main/**/*.properties</include>
				</includes>
			</resource>
		</resources>

		<!-- unit testing -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.2.0</version>
                        <configuration>
                            <doclint>none</doclint>
                            <failOnError>false</failOnError>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.2.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<!-- define javadocs and jxr docs -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<debug>true</debug>
					<breakiterator>true</breakiterator>
					<verbose>true</verbose>
				</configuration>
			</plugin>
			<plugin>
				<!-- jxr source code cross linking -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jxr-maven-plugin</artifactId>
				<configuration>
					<linkJavadoc>true</linkJavadoc>
					<javadocDir>apidocs</javadocDir>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>
